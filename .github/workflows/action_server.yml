on:
  push:
    branches:
      - master
    paths:
    - 'actions/**'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Action Server Image and Deploy
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - id: action_server
      name: Build an action server with a custom actions
      uses: RasaHQ/action-server-gha@master
      # Full list of parameters: https://github.com/RasaHQ/action-server-gha/tree/master#input-arguments
      with:
        docker_image_name: 'eccezarathustra/eccebot'
        docker_registry_login: ${{ secrets.DOCKER_HUB_LOGIN }}
        docker_registry_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        rasa_sdk_version: '2.2.0'
        # More details about github context:
        # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
        #
        # github.sha - The commit SHA that triggered the workflow run
        docker_image_tag: ${{ github.sha }}
        requirements_file: 'actions/requirements-actions.txt'
  
    # RE ADD when using a Kubernetes deployment with Helm. Currently using a Docker compose
    # - name: GCP Auth
    #   env:
    #     GCLOUD_SERVICE_ACCOUNT_KEYFILE: ${{ secrets.GCLOUD_AUTH }}
    #   run: |
    #     echo "${GCLOUD_SERVICE_ACCOUNT_KEYFILE}" > gcloud_sa_key.json
    #     gcloud auth activate-service-account --key-file=gcloud_sa_key.json
    #     gcloud container clusters get-credentials rasa-x-cluster --zone us-central1-c --project rasa-287805
    # - name: Helm Upgrade and Deploy
    #   run: |
    #     # Install helm v3
    #     curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
    #     helm repo add rasa-x https://armanjindal.github.io/rasa-x-helm/ --namespace "test-1"
    #     helm get values rasa-x-1604487544 -o yaml > values-generated.yaml --namespace "test-1"        
    #     helm upgrade rasa-x-1604487544 rasa-x/rasa-x -n "test-1" -f values-generated.yaml \
    #     --set app.name=${{ steps.action_server.outputs.docker_image_name }} \
    #     --set app.tag=${{ steps.action_server.outputs.docker_image_tag }} --namespace test-1 

